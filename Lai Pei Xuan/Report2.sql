--On-demand Report
SET SERVEROUTPUT ON

SET PAGESIZE 600
SET LINESIZE 1200

ALTER SESSION SET NLS_DATE_FORMAT='DD-MM-YYYY';

CREATE OR REPLACE PROCEDURE prc_stock_report IS

CURSOR PRODUCTTYPE_CURSOR IS
        SELECT DISTINCT ProductType
        FROM Product P;

CURSOR PRODUCT_CURSOR(v_ProducT_Type VARCHAR2) IS
        SELECT P.ProductCode, ProductName, QuantityInStock, BuyPrice, (QuantityInStock * BuyPrice) AS Total_Amount
        FROM Product P
        WHERE ProductType = v_ProducT_Type
        GROUP BY P.ProductCode, ProductName, QuantityInStock, BuyPrice
        ORDER BY P.ProductCode;

v_total_qty NUMBER(5) := 0;
v_total_buy_price NUMBER(7,2) := 0;
v_total_amount NUMBER(11,2) := 0;
v_grand_qty NUMBER(8) := 0;
v_grand_total_amount NUMBER(12,7) := 0;
v_count_product NUMBER (5) := 0;
v_count_stock NUMBER(5) := 0;

BEGIN

DBMS_OUTPUT.PUT_LINE(chr(10));
DBMS_OUTPUT.PUT_LINE(RPAD('Date',18,' ') || ':' || (SYSDATE - NUMTOYMINTERVAL(3, 'year')));
DBMS_OUTPUT.PUT_LINE(RPAD('Time', 18, ' ') || ':' || TO_CHAR(SYSDATE,'HH24:MI:SS'));
DBMS_OUTPUT.PUT_LINE(RPAD('Day',18,' ')||':'|| TO_CHAR(SYSDATE - NUMTOYMINTERVAL(3, 'year'),'DAY'));
DBMS_OUTPUT.PUT_LINE(RPAD('Generated By', 18, ' ')||':' || USER);

DBMS_OUTPUT.PUT_LINE(chr(10));
DBMS_OUTPUT.PUT_LINE(RPAD('*', 60, ' ') || 'Total Stock Value Report');

FOR PRODUCT_TYPE_REC IN PRODUCTTYPE_CURSOR LOOP
        DBMS_OUTPUT.PUT_LINE('Product Type: ' || PRODUCT_TYPE_REC.ProductType);
        v_total_qty := 0;
        v_total_buy_price := 0;
        v_total_amount := 0;

        DBMS_OUTPUT.PUT_LINE(RPAD('-', 12, '-') || ' ' || RPAD('-', 60, '-') || ' ' || RPAD('-', 20, '-') || ' ' || RPAD('-', 20, '-') || ' ' || RPAD('-', 20, '-'));
        DBMS_OUTPUT.PUT_LINE(RPAD('Product Code', 12, ' ') || ' ' || RPAD('Product Name', 60, ' ') || ' ' || RPAD('Quantity In Stock', 20, ' ') || ' ' || RPAD('Buy Price (RM)', 20, ' ') || ' ' || RPAD('Total Amount (RM)', 20, ' '));
        DBMS_OUTPUT.PUT_LINE(RPAD('-', 12, '-') || ' ' || RPAD('-', 60, '-') || ' ' || RPAD('-', 20, '-') || ' ' || RPAD('-', 20, '-') || ' ' || RPAD('-', 20, '-'));

        FOR PRODUCT_REC IN PRODUCT_CURSOR(PRODUCT_TYPE_REC.ProductType) LOOP
                DBMS_OUTPUT.PUT_LINE(RPAD(PRODUCT_REC.ProductCode, 12, ' ') || ' ' || RPAD(PRODUCT_REC.ProductName, 60, ' ') || ' ' || LPAD(PRODUCT_REC.QuantityInStock, 20, ' ') || ' ' || LPAD(TO_CHAR(PRODUCT_REC.BuyPrice, '99999.99'), 20, ' ') || ' ' || LPAD(TO_CHAR(PRODUCT_REC.Total_Amount, '9999999.99'), 20, ' '));

                v_total_qty := v_total_qty + PRODUCT_REC.QuantityInStock;
                v_total_buy_price := v_total_buy_price + PRODUCT_REC.BuyPrice;
                v_total_amount := v_total_amount + PRODUCT_REC.Total_Amount;
                v_count_product := v_count_product + 1;

        END LOOP;

        v_grand_qty := v_grand_qty + v_total_qty;
        v_grand_total_amount := v_grand_total_amount + v_total_amount;

        DBMS_OUTPUT.PUT_LINE(RPAD('-', 12, '-') || ' ' || RPAD('-', 60, '-') || ' ' || RPAD('-', 20, '-') || ' ' || RPAD('-', 20, '-') || ' ' || RPAD('-', 20, '-'));
        DBMS_OUTPUT.PUT_LINE(RPAD('*', 63, ' ') || ' ' || LPAD(TO_CHAR(v_total_qty, '99999'), 30, ' ') || ' ' || LPAD(TO_CHAR(v_total_buy_price, '9999999.99'), 20, ' ') || ' ' || LPAD(TO_CHAR(v_total_amount, '9999999.99'), 20, ' '));
        DBMS_OUTPUT.PUT_LINE(chr(16) || 'Subtotal for ' || PRODUCT_TYPE_REC.ProductType || ' Type products are RM' || TO_CHAR(v_total_amount, '99999999.99') || ' ' || chr(17));
        DBMS_OUTPUT.PUT_LINE(chr(10));

        v_count_stock := v_count_stock + 1;

END LOOP;

DBMS_OUTPUT.PUT_LINE(chr(10));
DBMS_OUTPUT.PUT_LINE('Summary');
DBMS_OUTPUT.PUT_LINE(RPAD('Total Stock Products Count ', 40, ' ') || ':' || v_grand_qty || ' product(s)' );
DBMS_OUTPUT.PUT_LINE(RPAD('Total Stock Value ', 40, ' ') || ': RM' ||TO_CHAR(v_grand_total_amount,'999999.99'));
DBMS_OUTPUT.PUT_LINE(RPAD('Total In Stock Product Category ', 40,' ') || ':' || v_count_stock || ' category(ies)');
DBMS_OUTPUT.PUT_LINE(RPAD('Total In Stock Product ', 40,' ') || ':' || v_count_product|| ' product(s)' );

END;
/

EXEC prc_stock_report;